# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Jinja Expressions
scopeName: source.jinja.ansible
fileTypes: []
uuid: f1b9db88-d5a0-4ca3-8da3-df4617983f0f

patterns:
- name: meta.scope.expression.jinja
  match: (\{\{)\s*([a-zA-z][\w\.]+)\s*(\}\})
  captures:
    '1': {name: entity.other.jinja.delimiter.variable}
    '2': {name: variable.other.jinja}
    '3': {name: entity.other.jinja.delimiter.variable}

- name: meta.scope.expression.jinja
  begin: (\{\{)\s*(?:([a-zA-z][\w\.]+)\s*(\|))?
  beginCaptures:
    '1': {name: entity.other.jinja.delimiter.variable}
    '2': {name: variable.other.jinja}
    '3': {name: keyword.operator.jinja}
  end: \}\}
  endCaptures:
    '0': {name: entity.other.jinja.delimiter.variable}
  patterns:
    - include: '#expression'

repository:
  expression:
    patterns:
    - name: string.quoted.double.ansible.jinja
      begin: \"
      end: \"|$

    - name: string.quoted.single.ansible.jinja
      begin: \'
      end: \'|$

    - name: constant.numeric.jinja
      match: \b\d+(?:\.\d+)\b

    - name: support.function.builtin.jinja
      match: \b(abs|attr|batch|capitalize|center|default|dictsort|escape|filesizeformat|first|float|forceescape|format|groupby|indent|int|join|last|length|list|lower|map|pprint|random|reject|rejectattr|replace|reverse|round|safe|select|selectattr|slice|sort|string|striptags|sum|title|trim|truncate|upper|urlencode|urlize|wordcount|wordwrap|xmlattr|callable|defined|divisibleby|equalto|escaped|even|iterable|lower|mapping|none|number|odd|sameas|sequence|string|undefined|upper|range|lipsum|dict|cycler|reset|next|current|joiner)\b

    - name: support.function.ansible.jinja
      match: \b(failed|changed|success|skipped|b64decode|b64encode|basename|checksum|default|difference|dirname|expanduser|from_json|from_yaml|hash|intersect|ipaddr|ipaddr|ipv4|ipv6|isnan|join|log|log|mandatory|max|min|password_hash|pow|random|random|realpath|regex_escape|regex_replace|relpath|root|root|shuffle|splitext|symmetric_difference|ternary|to_json|to_nice_json|to_nice_yaml|to_uuid|to_yaml|union|unique|version_compare)\b


    - name: constant.language.ansible
      match: \b(?:True|False|yes|no|None)\b

    - name: keyword.operator.ansible.jinja
      match: ~|\||==|!=|<=?|>=?|\+|-|//?|%|\*\*?

    - name: keyword.operator.ansible.jinja
      match: \b(in|is|and|or|not)\b
...